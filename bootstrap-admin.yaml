apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    artifact.spinnaker.io/location: opencloudcx-bootstrap-app
    artifact.spinnaker.io/name: opencloudcx-bootstrap-app
    artifact.spinnaker.io/type: kubernetes/deployment
    moniker.spinnaker.io/application: aws-codebuild-bootstrap-website
    moniker.spinnaker.io/cluster: deployment opencloudcx-bootstrap-app
  labels:
    app.kubernetes.io/instance: opencloudcx-bootstrap-app
    app.kubernetes.io/managed-by: spinnaker
    app.kubernetes.io/name: opencloudcx-bootstrap-app
    app.kubernetes.io/version: 2.0.0
    io.opencloudcx.kubernetes.application.stack: opencloudcx-bootstrap-app
  name: opencloudcx-bootstrap-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: opencloudcx-bootstrap-app
      app.kubernetes.io/name: opencloudcx-bootstrap-app
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        artifact.spinnaker.io/location: opencloudcx-bootstrap-app
        artifact.spinnaker.io/name: opencloudcx-bootstrap-app
        artifact.spinnaker.io/type: kubernetes/deployment
        moniker.spinnaker.io/application: aws-codebuild-bootstrap-website
        moniker.spinnaker.io/cluster: deployment opencloudcx-bootstrap-app
      labels:
        app.kubernetes.io/instance: opencloudcx-bootstrap-app
        app.kubernetes.io/managed-by: spinnaker
        app.kubernetes.io/name: opencloudcx-bootstrap-app
    spec:
      containers:
        - image: 'ajnriva/opencloudcx-app:1.0'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: 80
          name: opencloudcx-bootstrap
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: 80
          resources: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    artifact.spinnaker.io/location: opencloudcx-bootstrap-app
    artifact.spinnaker.io/name: opencloudcx-bootstrap-app
    artifact.spinnaker.io/type: kubernetes/service
    moniker.spinnaker.io/application: aws-codebuild-bootstrap-website
    moniker.spinnaker.io/cluster: service opencloudcx-bootstrap-app
  labels:
    app.kubernetes.io/instance: opencloudcx-bootstrap-app
    app.kubernetes.io/managed-by: spinnaker
    app.kubernetes.io/name: opencloudcx-bootstrap-app
    app.kubernetes.io/version: 2.0.0
    io.portainer.kubernetes.application.stack: opencloudcx-bootstrap-app
  name: opencloudcx-bootstrap-app
  namespace: default
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app.kubernetes.io/instance: opencloudcx-bootstrap-app
    app.kubernetes.io/name: opencloudcx-bootstrap-app
  type: LoadBalancer
